name: Build OnePlus_SukiSU Ultra All

on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8550'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_ace2pro_v'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'kalama'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android13'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '5.15'
      SUSFS_CI:
        description: "SUSFS模块下载是否调用CI？"
        required: true
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "Numbersf"
          git config --global user.email "263623064@qq.com"

      - name: Setup cache
        uses: actions/cache@v3
        id: kernel-cache
        with:
          path: kernel_workspace
          key: ${{ runner.os }}-${{ inputs.CPU }}-${{ inputs.FEIL }}-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl bc bison flex libssl-dev libelf-dev

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        if: steps.kernel-cache.outputs.cache-hit != 'true'
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ inputs.CPU }} -m ${{ inputs.FEIL }}.xml --depth=1
          repo sync -j$(nproc)
          rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
          sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
          sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion

      - name: Add KernelSU-SukiSU-Ultra
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
          cd ./KernelSU
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 12506)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV

      - name: Apply patches
        run: |
          cd kernel_workspace
          git clone --depth=1 https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}
          git clone --depth=1 https://github.com/ShirkNeko/SukiSU_patch.git

          cd kernel_platform/common
          patch -p1 -F 3 < ../../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}.patch || true
          patch -p1 -F 3 < ../../SukiSU_patch/69_hide_stuff.patch
          patch -p1 -F 3 < ../../SukiSU_patch/hooks/new_hooks.patch

      - name: Configure kernel
        run: |
          cd kernel_workspace/kernel_platform
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki

      - name: Build kernel
        run: |
          cd kernel_workspace
          if [ ${{ inputs.CPU }} == 'sm8650' ]; then
            ./kernel_platform/build_with_bazel.py -t ${{ inputs.CPUD }} gki
          else
            LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ inputs.CPUD }} gki
          fi

      - name: Prepare AnyKernel3
        run: |
          git clone --depth=1 https://github.com/Numbersf/AnyKernel3
          cp kernel_platform/out/msm-kernel-${{ inputs.CPUD }}-gki/dist/Image AnyKernel3/
          cd kernel_platform/out/msm-kernel-${{ inputs.CPUD }}-gki/dist
          curl -LO https://raw.githubusercontent.com/Numbersf/Action-Build/main/patch_linux
          chmod +x patch_linux && ./patch_linux
          mv oImage Image
          cp Image $GITHUB_WORKSPACE/AnyKernel3/

      - name: Download SUSFS module
        run: |
          if ${{ inputs.SUSFS_CI }}; then
            LATEST_RUN_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/sidex15/susfs4ksu-module/actions/runs" | jq -r '.workflow_runs[0].id')
            ARTIFACT_URL=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/sidex15/susfs4ksu-module/actions/runs/$LATEST_RUN_ID/artifacts" | jq -r '.artifacts[0].archive_download_url')
            curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o ksu_module_susfs.zip "$ARTIFACT_URL"
          else
            wget -qO- https://github.com/sidex15/ksu_module_susfs/releases/latest/download/ksu_module_susfs_1.5.2+.zip > ksu_module_susfs.zip
          fi
          cp ksu_module_susfs.zip AnyKernel3/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_KernelSU_${{ env.KSUVER }}_${{ inputs.FEIL }}
          path: AnyKernel3/*
          retention-days: 30
